
&НаКлиенте
Процедура ФайлСДокументамиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
    если Не ВыбратьФайл(Объект.ПутьКФайлу, РежимДиалогаВыбораФайла.Открытие, "Выбор файла данных", "*.dbf") тогда
        Сообщить("Не удалось выбрать файл!");
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ВыбратьФайл(ПолноеИмяФайла, Режим, Заголовок, Фильтр)

	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок 							= "Выбор файла";
	Диалог.Фильтр 							= "Excel файлы(*.xls;*.xlsx)|*.xls;*.xlsx";
	Диалог.ИндексФильтра 					= 0;
	Диалог.ПредварительныйПросмотр 		= Ложь;
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Диалог.МножественныйВыбор 			= Ложь;

    Если ЗначениеЗаполнено(ПолноеИмяФайла) Тогда
        Диалог.ПолноеИмяФайла= ПолноеИмяФайла;
    КонецЕсли;

    Если Диалог.Выбрать() Тогда
        ПолноеИмяФайла= Диалог.ПолноеИмяФайла;
        Возврат Истина;
    Иначе
        Возврат Ложь;
    КонецЕсли;

КонецФункции

&НаСервере
Процедура Тест()  
	//Файл - это файл Excel
	ТабДок = Новый ТабличныйДокумент;
	Попытка
		ТабДок.Прочитать(Объект.ПутьКФайлу, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		//Возврат Неопределено;
	КонецПопытки;

	// //Создадим ТЗ куда будем собирать инфу
	//Таб = Новый ТаблицаЗначений;
	//Таб.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("Строка"));
	//Таб.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число"));
	//Таб.Колонки.Добавить("Цена",Новый ОписаниеТипов("Число"));
	
//Определяем количество строк     
	Ит = 0;	
	КолСтр = ТабДок.ВысотаТаблицы;
	Для Сч = 4 по КолСтр Цикл
		Попытка    
			Ит = Ит + ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 8).ТекущаяОбласть.Значение;		

			НоваяСтрока 					= Объект.ДанныеИзФайла.Добавить();
			НоваяСтрока.Артикул 		= СтрЗаменить(Строка(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 1).ТекущаяОбласть.Текст),Символы.НПП,"");		
		    	НоваяСтрока.КодТНВЭД 		= СтрЗаменить(Строка(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 2).ТекущаяОбласть.Текст),Символы.НПП,"");		 
			НоваяСтрока.Наименование	= Строка(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 3).ТекущаяОбласть.Текст);		  
			НоваяСтрока.ЕдИзм 			= Строка(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 4).ТекущаяОбласть.Текст);		
			НоваяСтрока.Страна 			= Строка(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 5).ТекущаяОбласть.Текст);		
			НоваяСтрока.Количество 	= ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 6).ТекущаяОбласть.Значение;		 
			НоваяСтрока.Цена 			= ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 7).ТекущаяОбласть.Значение;		
			НоваяСтрока.Сумма 			= ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 8).ТекущаяОбласть.Значение;		
			НоваяСтрока.Комиссия 		= ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 8).ТекущаяОбласть.Значение*Объект.Комиссия/100;

//			ТБ = Таб.Добавить();
////Обращаемся к ячейки и забираем данные
//			ТБ.Номенклатура = СтрЗаменить(Строка(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 1).ТекущаяОбласть.Текст),Символы.НПП,"");		
//			ТБ.Количество = Число(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 2).ТекущаяОбласть.Текст);				
//			ТБ.Цена = Число(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C" + 3).ТекущаяОбласть.Текст);		
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не удалось загрузить строку "+Строка(Сч);
			Сообщение.Сообщить();
		КонецПопытки;
	КонецЦикла;	
    	Объект.ИтогКолич = Ит;
	
КонецПроцедуры


&НаКлиенте
Процедура ПрочитатьФайл(Команда) 
    Тест();
	
	//ОписаниеОшибки = "";
	//ФайлИсточник = Объект.ПутьКФайлу;
	//Если ПустаяСтрока(ФайлИсточник) Тогда
	//	Сообщить("Не задано имя файла!");
	//	Возврат;
	//КонецЕсли;
	//	Попытка
	//	Excel 				= Новый COMОбъект("Excel.Application");
	//	Excel.DisplayAlerts = Ложь;
	//	Excel.WorkBooks.Open(ФайлИсточник);
	//	ExcelЛист		 	= Excel.Sheets(1);
	//Исключение
	//	Текст = "ru = ""Невозможно открыть файл"";"
	//	+ " en = ""Can't open file""";
	//	Сообщить(НСтр(Текст) + "
	//	|" + ОписаниеОшибки());
	//	Excel.Quit();
	//	Возврат;
	//КонецПопытки;
	//xlCellTypeLastCell = 11; 
	//ExcelЛист.Activate();
	//RowCount = ExcelЛист.Cells.SpecialCells(xlCellTypeLastCell).Row;  
	//Excel.Columns(1).NumberFormat = "0#"" Kg""";    
	//Excel.Columns(2).NumberFormat = "0#"" Kg""";
	//Ит = 0;	
	//Для i = 4 по RowCount цикл 		
	//	
	//	Если  Excel.Cells(i, 1).Value2 = "ИТОГО" Тогда  
	//		Объект.ИтогКолич = Ит;
	//		Прервать;
	//	КонецЕсли;
	//	Ит = Ит + Excel.Cells(i, 7).Value2;
	//	//Считываем значение ячейки
	//	ЗначениеЯчейкиАртикул 			= Excel.Cells(i, 1).Value2; 
	//	ЗначениеЯчейкиКодТНВЭД 		= Excel.Cells(i, 2).Value2; 
	//	ЗначениеЯчейкиНаименование	= Excel.Cells(i, 3).Value2;   
	//	ЗначениеЯчейкиЕдИзм 			= Excel.Cells(i, 4).Value2;   
	//	ЗначениеЯчейкиСтрана 			= Excel.Cells(i, 5).Value2;
	//	ЗначениеЯчейкиКоличество 		= Excel.Cells(i, 6).Value2;   
	//	ЗначениеЯчейкиЦена 			= Excel.Cells(i, 7).Value2;  
	//	ЗначениеЯчейкиСумма 			= Excel.Cells(i, 8).Value2;   
	//			
	//	
	//	НоваяСтрока 					= Объект.ДанныеИзФайла.Добавить();
	//	НоваяСтрока.Артикул 		= СокрЛП(ЗначениеЯчейкиАртикул);
	//    	НоваяСтрока.КодТНВЭД 		= СокрЛП(ЗначениеЯчейкиКодТНВЭД); 
	//	НоваяСтрока.Наименование	= СокрЛП(ЗначениеЯчейкиНаименование);  
	//	НоваяСтрока.ЕдИзм 			= СокрЛП(ЗначениеЯчейкиЕдИзм);
	//	НоваяСтрока.Страна 			= СокрЛП(ЗначениеЯчейкиСтрана);
	//	НоваяСтрока.Количество 	= ЗначениеЯчейкиКоличество; 
	//	НоваяСтрока.Цена 			= ЗначениеЯчейкиЦена;
	//	НоваяСтрока.Сумма 			= ЗначениеЯчейкиСумма;
	//	НоваяСтрока.Комиссия 		= ЗначениеЯчейкиСумма*Объект.Комиссия/100;
	//	
	//КонецЦикла;
	//
	//Excel.WorkBooks.Close();
	//Excel.Quit();
	//Excel = 0;		

КонецПроцедуры


&НаКлиенте
Процедура ОчиститьТЧФ(Команда)
	Объект.ДанныеИзФайла.Очистить();
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	Поступ = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	Поступ.Дата = НачалоДня(Объект.ДатаДок);
	Поступ.Контрагент =  Объект.Поставщик; 
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Контрагент
		|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
		|	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора";
	
	ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
	Запрос.УстановитьПараметр("ВидДоговора", ВидДоговора);
	Запрос.УстановитьПараметр("Контрагент", Объект.Поставщик);
	
	РезультатЗапроса 				= Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи 	= РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ДогПост = ВыборкаДетальныеЗаписи.Ссылка;   
	Иначе
		//ПоказатьПредупреждение(,"Не найден договор Поставщика!");
	КонецЕсли;
	
    	Поступ.ВидОперации 			= Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Покупка;
	Поступ.СчетРасчетов 			= ПланыСчетов.Хозрасчетный.СчетаКОплатеЗаТоварыИУслуги;
	Поступ.ДоговорКонтрагента 	= ДогПост; 
	Поступ.ВалютаДокумента 	= ДогПост.ВалютаРасчетов;
	Поступ.Курс 					= ПолучитьКурс(ДогПост.ВалютаРасчетов,НачалоДня(Объект.ДатаДок));
	Поступ.Кратность 				= ПолучитьКратность(ДогПост.ВалютаРасчетов,НачалоДня(Объект.ДатаДок));
	Поступ.Организация 			= Объект.Организация;
	Поступ.Склад 					= Объект.Склад;
	
	
	Реализ 							= Документы.РеализацияТоваровУслуг.СоздатьДокумент(); 
	Реализ.ВидОперации 				= Перечисления.ВидыОперацийРеализацияТоваров.Товары;
	Реализ.Дата 						= Объект.ДатаДок;
	Реализ.БезналичныйРасчет 		= Истина;
	Реализ.Контрагент 				= Объект.Контрагент;
	Реализ.ДоговорКонтрагента 		= Объект.Договор; 
	Реализ.ВалютаДокумента 		= Объект.Договор.ВалютаРасчетов;
	Реализ.СтавкаНДС 				= Объект.Договор.СтавкаНДС;
	Реализ.Курс 						= ПолучитьКурс(Объект.Договор.ВалютаРасчетов,НачалоДня(Объект.ДатаДок));
	Реализ.Кратность 					= ПолучитьКратность(Объект.Договор.ВалютаРасчетов,НачалоДня(Объект.ДатаДок));
	Реализ.Организация 				= Объект.Организация;
	Реализ.Склад 						= Объект.Склад;
	Реализ.Комментарий 				= Объект.Комментарий; 
	Реализ.СчетРасчетов 				= ПланыСчетов.Хозрасчетный.СчетаКПолучениюЗаТоварыУслуги; 
	Реализ.СуммаВключаетНалоги 	= Истина;
	
	ИтСум = 0;
	Для Каждого стр Из Объект.ДанныеИзФайла Цикл
		СтрПоступл 					= Поступ.Товары.Добавить();
		СтрРеализ 					= Реализ.Товары.Добавить();
		
		Номенкл 						= ПолучитьНоменклатуру(стр.Артикул, стр.КодТНВЭД, стр.Наименование, стр.ЕдИзм, стр.Страна);
		СтрПоступл.Номенклатура 	= Номенкл; 
		СтрПоступл.Количество 		= стр.Количество;
		СтрПоступл.Цена 				= стр.Цена;
		СтрПоступл.Сумма 			= стр.Сумма; 
        	СтрПоступл.Всего 			= стр.Сумма;
	
		СчетаУчетаНоменклатуры 	= БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, Номенкл.Ссылка);
		Если ЗначениеЗаполнено(СчетаУчетаНоменклатуры.СчетУчета) Тогда 
			СтрПоступл.СчетУчета  	= СчетаУчетаНоменклатуры.СчетУчета;
		Иначе 
			СтрПоступл.СчетУчета 	= НСтр("ru = 'не назначен'");	
		КонецЕсли;	
		 
		
		Транспорт 						= ?(Объект.ИтогКолич=0,0,стр.Сумма/Объект.ИтогКолич*Объект.Транспорт); 
		Банк 							= ?(Объект.ИтогКолич=0,0,стр.Сумма/Объект.ИтогКолич*Объект.Банк);
		Прочее 						= ?(Объект.ИтогКолич=0,0,стр.Сумма/Объект.ИтогКолич*Объект.Прочее);
		Корректировка 				= ?(Объект.ИтогКолич=0,0,стр.Сумма/Объект.ИтогКолич*Объект.Корректировка);
		
		СтрРеализ.Номенклатура 	= Номенкл; 
		СтрРеализ.Количество 		= стр.Количество;
		СтрРеализ.Сумма 			= стр.Сумма+стр.Комиссия+Транспорт+Банк+Прочее+Корректировка;
		СтрРеализ.Всего				= СтрРеализ.Сумма;
		СтрРеализ.Цена 				= СтрРеализ.Сумма / стр.Количество;   
		СтавкаНДС 					= ПолучитьСтавкуНДС(Объект.Договор.СтавкаНДС,Объект.ДатаДок); 
		СтрРеализ.СуммаНДС 		= СтрРеализ.Сумма  / (100 + СтавкаНДС) * СтавкаНДС;
		СтрРеализ.СтавкаНСП 		= ПолучитьСтавкуНСП(Объект.Организация,Объект.ДатаДок); 
		СтрРеализ.СуммаНСП		= 0;  
		СтрРеализ.СуммаДохода 	= СтрРеализ.Сумма - СтрРеализ.СуммаНДС;
		СтрРеализ.СчетУчета 		= СчетаУчетаНоменклатуры.СчетУчета;
		СтрРеализ.СчетДоходов 		= СчетаУчетаНоменклатуры.СчетДоходов;
		СтрРеализ.СчетСебестоимости = СчетаУчетаНоменклатуры.СчетРасходов; 
		ИтСум 							= ИтСум + СтрРеализ.Сумма;
	КонецЦикла;
	Поступ.Записать(РежимЗаписиДокумента.Проведение,);
	Реализ.Записать(РежимЗаписиДокумента.Проведение,); 
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();   
КонецПроцедуры

Функция  ПолучитьСтавкуНСП(Организация,ДатаДок)
	СтавкаНСП  = Справочники.СтавкиНСП.Торговля;
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	СтавкиНСПСрезПоследних.СтавкаНСП КАК СтавкаНСП
	//	|ИЗ
	//	|	РегистрСведений.СтавкиНСП.СрезПоследних(
	//	|			&ДатаДок,
	//	|			Организация = &Организация
	//	|				И СтавкаНСП = &СтавкаНСП) КАК СтавкиНСПСрезПоследних";
	//
	//Запрос.УстановитьПараметр("ДатаДок", ДатаДок);
	//Запрос.УстановитьПараметр("Организация", Организация);
	//Запрос.УстановитьПараметр("СтавкаНСП", СтавкаНСП);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//КонецЦикла;
	
	Возврат  СтавкаНСП;
КонецФункции


Функция ПолучитьСтавкуНДС(СпрСтавка,ДатаДок)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтавкиНДССрезПоследних.Ставка КАК Ставка
		|ИЗ
		|	РегистрСведений.СтавкиНДС.СрезПоследних(&ДатаДок, СтавкаНДС = &Ставка) КАК СтавкиНДССрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаДок", ДатаДок);
	Запрос.УстановитьПараметр("Ставка", СпрСтавка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Ставка = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Ставка = ВыборкаДетальныеЗаписи.Ставка;
	КонецЦикла;
	
    Возврат  Ставка;
КонецФункции


Функция ПолучитьКурс(Валюта,ДатаКурса) 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КурсыВалютСрезПоследних.Курс КАК Курс
		|ИЗ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКурса, Валюта = &Валюта) КАК КурсыВалютСрезПоследних";
	
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("ДатаКурса", ДатаКурса);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Курс = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Курс = ВыборкаДетальныеЗаписи.Курс;
	КонецЦикла;
	
	Возврат Курс;
КонецФункции

Функция ПолучитьКратность(Валюта,ДатаКурса)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КурсыВалютСрезПоследних.Кратность КАК Кратность
		|ИЗ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКурса, Валюта = &Валюта) КАК КурсыВалютСрезПоследних";
	
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("ДатаКурса", ДатаКурса);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Кратность = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Кратность = ВыборкаДетальныеЗаписи.Кратность;
	КонецЦикла;
	
	Возврат Кратность;
КонецФункции


& НаСервере
Функция ПолучитьНоменклатуру(Артикул,КодТНВЭД,Наимен,ЕдИзм,Страна)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.ПометкаУдаления = ЛОЖЬ
		|	И Номенклатура.Наименование = &Наимен";
	
	Запрос.УстановитьПараметр("Наимен", Наимен);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Номенкл = ВыборкаДетальныеЗаписи.Ссылка;
	Иначе
		СпрНом = Справочники.Номенклатура.СоздатьЭлемент();
		СпрНом.Наименование = Наимен;  
		СпрНом.Артикул = Артикул;
		СпрНом.КодТНВЭД = ?(КодТНВЭД="","",ПолучитьКодТНВЭД(КодТНВЭД));
		СпрНом.Родитель = Справочники.Номенклатура.НайтиПоНаименованию("Товары");
		СпрНом.ЕдиницаИзмерения = ПолучитьЕд(ЕдИзм);   
		СпрНом.СтранаПроисхождения = ?(Страна="","",ПолучитьСтрану(Страна)); 
		СпрНом.Записать();
		Номенкл =  СпрНом.Ссылка;
	КонецЕсли;
	
	Возврат Номенкл; 		
КонецФункции


& НаСервере
Функция ПолучитьЕд(ЕдИзм)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КлассификаторЕдиницИзмерения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
		|ГДЕ
		|	КлассификаторЕдиницИзмерения.ПометкаУдаления = ЛОЖЬ
		|	И КлассификаторЕдиницИзмерения.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", ЕдИзм);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Ед = ВыборкаДетальныеЗаписи.Ссылка; 
	Иначе
		СпрЕд = Справочники.КлассификаторЕдиницИзмерения.СоздатьЭлемент();
		СпрЕд.Наименование =  ЕдИзм;
		СпрЕд.НаименованиеПолное =  ЕдИзм; 
		СпрЕд.Записать();
		Ед = СпрЕд.Ссылка;
	КонецЕсли;
	
    Возврат Ед;
КонецФункции

& НаСервере
Функция ПолучитьКодТНВЭД(КодТНВЭД)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КлассификаторТНВЭД.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
		|ГДЕ
		|	КлассификаторТНВЭД.ПометкаУдаления = ЛОЖЬ
		|	И КлассификаторТНВЭД.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", КодТНВЭД);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Код = ВыборкаДетальныеЗаписи.Ссылка;
	Иначе   
		КлассификаторXML = Справочники.КлассификаторТНВЭД.ПолучитьМакет("КлассификаторТНВЭД2022").ПолучитьТекст();
		ТаблицаКлассификатор = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
		СтрКласТНВЭД = ТаблицаКлассификатор.Найти(КодТНВЭД,"Code");  
		
		Если СтрКласТНВЭД <> НЕОПРЕДЕЛЕНО Тогда
			СпрТНВЭД = Справочники.КлассификаторТНВЭД.СоздатьЭлемент();
			СпрТНВЭД.Код =  СтрКласТНВЭД.Code;
			СпрТНВЭД.Наименование = СтрКласТНВЭД.Name;
			СпрТНВЭД.НаименованиеПолное = СтрКласТНВЭД.Name;
			СпрТНВЭД.Записать();
			Код = СпрТНВЭД.Ссылка; 
		Иначе
			СпрТНВЭД = Справочники.КлассификаторТНВЭД.СоздатьЭлемент();
			СпрТНВЭД.Код =  КодТНВЭД;
			СпрТНВЭД.Наименование = КодТНВЭД;
			СпрТНВЭД.НаименованиеПолное = КодТНВЭД;
			СпрТНВЭД.Записать();
			Код = СпрТНВЭД.Ссылка;		КонецЕсли;
	КонецЕсли;
	
    Возврат  Код;
КонецФункции


& НаСервере
Функция ПолучитьСтрану(Страна)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтраныМира.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтраныМира КАК СтраныМира
		|ГДЕ
		|	СтраныМира.ПометкаУдаления = ЛОЖЬ
		|	И СтраныМира.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", ВРЕГ(Страна));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Стрн = ВыборкаДетальныеЗаписи.Ссылка;
	Иначе   
		КлассификаторСтран = РаботаСАдресами.ТаблицаКлассификатора();
		СтрКласСтрана = КлассификаторСтран.Найти(ВРЕГ(СокрЛП(Страна)),"Наименование");  
		
		Если СтрКласСтрана <> НЕОПРЕДЕЛЕНО Тогда
			СпрСтрн = Справочники.СтраныМира.СоздатьЭлемент();
			СпрСтрн.Код =  СтрКласСтрана.Код;
			СпрСтрн.Наименование = ВРЕГ(СокрЛП(Страна));
			СпрСтрн.НаименованиеПолное = СтрКласСтрана.НаименованиеПолное;
			СпрСтрн.МеждународноеНаименование = СтрКласСтрана.МеждународноеНаименование;
			СпрСтрн.КодАльфа2  = СтрКласСтрана.КодАльфа2;
			СпрСтрн.КодАльфа3  = СтрКласСтрана.КодАльфа3; 
			СпрСтрн.УчастникЕАЭС = СтрКласСтрана.УчастникЕАЭС;
			СпрСтрн.Записать();
			Стрн = СпрСтрн.Ссылка; 
		Иначе
			СпрСтрн = Справочники.СтраныМира.СоздатьЭлемент();
			СпрСтрн.Код =  ЛЕВ(ВРЕГ(СокрЛП(СтрКласСтрана)),3);
			СпрСтрн.Наименование = ВРЕГ(СокрЛП(СтрКласСтрана));
			СпрСтрн.НаименованиеПолное = ВРЕГ(СокрЛП(СтрКласСтрана));
			СпрСтрн.МеждународноеНаименование = ВРЕГ(СокрЛП(СтрКласСтрана));
			СпрСтрн.Записать();
			Стрн = СпрСтрн.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
    Возврат  Стрн;
КонецФункции





&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.ДатаДок = ТекущаяДата();  
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Организации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ПометкаУдаления = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		 Объект.Организация =  ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Склады.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.ПометкаУдаления = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Объект.Склад = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
КонецПроцедуры

